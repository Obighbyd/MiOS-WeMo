<implementation>
    <functions>
function initialize (lul_device)
	if (package.path:find ("/etc/cmh-ludl/?.lua;/etc/cmh-lu/?.lua", 1, true) == nil) then
		package.path = package.path .. ";/etc/cmh-ludl/?.lua;/etc/cmh-lu/?.lua"
	end
	package.loaded.L_WeMo1 = nil
	this_plugin = require ("L_WeMo1")
	reentry = this_plugin.reentry
	cancelProxySubscription = this_plugin.cancelProxySubscription
	return this_plugin.initialize (lul_device)
end
	</functions>
    <startup>initialize</startup>
    <actionList>
        <action>
            <serviceId>urn:futzle-com:serviceId:WeMo1</serviceId>
            <name>notifyBinaryState</name>
            <run>
              return this_plugin.handleNotifyBinaryState(lul_device, lul_settings.binaryState, lul_settings.sid)
            </run>
        </action>
        <action>
            <serviceId>urn:futzle-com:serviceId:WeMo1</serviceId>
            <name>notifyInsightParams</name>
            <run>
              return this_plugin.handleNotifyBinaryState(lul_device, lul_settings.insightParams, lul_settings.sid)
            </run>
        </action>
        <action>
            <serviceId>urn:futzle-com:serviceId:WeMo1</serviceId>
            <name>GetInsightParams</name>
            <run>
              return this_plugin.handleGetInsightParams(lul_device)
            </run>
        </action>
        
        <action>
            <serviceId>urn:futzle-com:serviceId:WeMo1</serviceId>
            <name>GetPowerThreshold</name>
            <run>
              return this_plugin.handleGetPowerThreshold(lul_device, lul_settings.PowerThreshold)
            </run>
        </action>
        <action>
            <serviceId>urn:futzle-com:serviceId:WeMo1</serviceId>
            <name>SetPowerThreshold</name>
            <run>
              return this_plugin.handleSetPowerThreshold(lul_device, lul_settings.PowerThreshold)
            </run>
        </action>        
         <action>
            <serviceId>urn:futzle-com:serviceId:WeMo1</serviceId>
            <name>ResetPowerThreshold</name>
            <run>
              return this_plugin.handleResetPowerThreshold(lul_device, lul_settings.PowerThreshold)
            </run>
        </action>
        
        <action>
            <serviceId>urn:micasaverde-com:serviceId:SecuritySensor1</serviceId>
            <name>SetArmed</name>
            <run>
              return this_plugin.handleSetArmed(lul_device, lul_settings.newArmedValue)
            </run>
        </action>
        <action>
            <serviceId>urn:upnp-org:serviceId:SwitchPower1</serviceId>
            <name>SetTarget</name>
            <run>
              return this_plugin.handleSetTarget(lul_device, lul_settings.newTargetValue)
            </run>
        </action>
    </actionList>
</implementation>
